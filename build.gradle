plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id "com.modrinth.minotaur" version "1.1.0"
	id 'io.github.juuxel.loom-quiltflower' version '1.6.1'
	id "maven-publish"
	id "org.jetbrains.kotlin.jvm" version "1.6.20-RC2"
	id 'idea'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/jineric.accesswidener")
}

repositories {
	mavenCentral()
	maven { url "https://api.modrinth.com/maven" }
	maven { url = 'https://maven.minecraftforge.net/' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation("com.github.glitchfiend:TerraBlender-fabric:${minecraft_version}-${terrablender_version}")
	modImplementation "maven.modrinth:stonecutter_recipe_tags:3.0.1"
	include "maven.modrinth:stonecutter_recipe_tags:3.0.1"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

java {
	withSourcesJar()
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
